// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dap/cad/slicespec/impl/googleprotobuf/sliceSpec.proto

package dap.cad.slicespec.impl.googleprotobuf;

public final class SliceSpec {
  private SliceSpec() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SliceOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Slice> {
    
    // required int32 sliceID = 1;
    boolean hasSliceID();
    int getSliceID();
    
    // optional string topology = 2;
    boolean hasTopology();
    String getTopology();
    
    // optional string name = 3;
    boolean hasName();
    String getName();
    
    // repeated .dap.cad.slicespec.impl.googleprotobuf.Slice.vNode virtualnode = 4;
    java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode> 
        getVirtualnodeList();
    dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode getVirtualnode(int index);
    int getVirtualnodeCount();
    java.util.List<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder> 
        getVirtualnodeOrBuilderList();
    dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder getVirtualnodeOrBuilder(
        int index);
    
    // repeated .dap.cad.slicespec.impl.googleprotobuf.Slice.vLink virtuallink = 5;
    java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink> 
        getVirtuallinkList();
    dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink getVirtuallink(int index);
    int getVirtuallinkCount();
    java.util.List<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder> 
        getVirtuallinkOrBuilderList();
    dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder getVirtuallinkOrBuilder(
        int index);
    
    // optional int64 entryTime = 6;
    boolean hasEntryTime();
    long getEntryTime();
    
    // optional int64 exitTime = 7;
    boolean hasExitTime();
    long getExitTime();
    
    // optional int64 version = 8;
    boolean hasVersion();
    long getVersion();
    
    // repeated string policy = 9;
    java.util.List<String> getPolicyList();
    int getPolicyCount();
    String getPolicy(int index);
  }
  public static final class Slice extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Slice> implements SliceOrBuilder {
    // Use Slice.newBuilder() to construct.
    private Slice(Builder builder) {
      super(builder);
    }
    private Slice(boolean noInit) {}
    
    private static final Slice defaultInstance;
    public static Slice getDefaultInstance() {
      return defaultInstance;
    }
    
    public Slice getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_fieldAccessorTable;
    }
    
    public interface vNodeOrBuilder extends
        com.google.protobuf.GeneratedMessage.
            ExtendableMessageOrBuilder<vNode> {
      
      // required int32 vNodeId = 1;
      boolean hasVNodeId();
      int getVNodeId();
      
      // optional int32 vNodeCapacity = 2;
      boolean hasVNodeCapacity();
      int getVNodeCapacity();
      
      // optional int32 vNodeType = 3;
      boolean hasVNodeType();
      int getVNodeType();
      
      // optional string vNodeClass = 4;
      boolean hasVNodeClass();
      String getVNodeClass();
      
      // optional string vNodeName = 5;
      boolean hasVNodeName();
      String getVNodeName();
    }
    public static final class vNode extends
        com.google.protobuf.GeneratedMessage.ExtendableMessage<
          vNode> implements vNodeOrBuilder {
      // Use vNode.newBuilder() to construct.
      private vNode(Builder builder) {
        super(builder);
      }
      private vNode(boolean noInit) {}
      
      private static final vNode defaultInstance;
      public static vNode getDefaultInstance() {
        return defaultInstance;
      }
      
      public vNode getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required int32 vNodeId = 1;
      public static final int VNODEID_FIELD_NUMBER = 1;
      private int vNodeId_;
      public boolean hasVNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getVNodeId() {
        return vNodeId_;
      }
      
      // optional int32 vNodeCapacity = 2;
      public static final int VNODECAPACITY_FIELD_NUMBER = 2;
      private int vNodeCapacity_;
      public boolean hasVNodeCapacity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getVNodeCapacity() {
        return vNodeCapacity_;
      }
      
      // optional int32 vNodeType = 3;
      public static final int VNODETYPE_FIELD_NUMBER = 3;
      private int vNodeType_;
      public boolean hasVNodeType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVNodeType() {
        return vNodeType_;
      }
      
      // optional string vNodeClass = 4;
      public static final int VNODECLASS_FIELD_NUMBER = 4;
      private java.lang.Object vNodeClass_;
      public boolean hasVNodeClass() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getVNodeClass() {
        java.lang.Object ref = vNodeClass_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            vNodeClass_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getVNodeClassBytes() {
        java.lang.Object ref = vNodeClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          vNodeClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional string vNodeName = 5;
      public static final int VNODENAME_FIELD_NUMBER = 5;
      private java.lang.Object vNodeName_;
      public boolean hasVNodeName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getVNodeName() {
        java.lang.Object ref = vNodeName_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            vNodeName_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getVNodeNameBytes() {
        java.lang.Object ref = vNodeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          vNodeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        vNodeId_ = 0;
        vNodeCapacity_ = 0;
        vNodeType_ = 0;
        vNodeClass_ = "";
        vNodeName_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasVNodeId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!extensionsAreInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        com.google.protobuf.GeneratedMessage
          .ExtendableMessage<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode>.ExtensionWriter extensionWriter =
            newExtensionWriter();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, vNodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, vNodeCapacity_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, vNodeType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getVNodeClassBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getVNodeNameBytes());
        }
        extensionWriter.writeUntil(536870912, output);
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, vNodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, vNodeCapacity_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, vNodeType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getVNodeClassBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getVNodeNameBytes());
        }
        size += extensionsSerializedSize();
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.ExtendableBuilder<
            dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode, Builder> implements dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_fieldAccessorTable;
        }
        
        // Construct using dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          vNodeId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          vNodeCapacity_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          vNodeType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          vNodeClass_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          vNodeName_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.getDescriptor();
        }
        
        public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode getDefaultInstanceForType() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.getDefaultInstance();
        }
        
        public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode build() {
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode buildPartial() {
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode result = new dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.vNodeId_ = vNodeId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.vNodeCapacity_ = vNodeCapacity_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.vNodeType_ = vNodeType_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.vNodeClass_ = vNodeClass_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.vNodeName_ = vNodeName_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode) {
            return mergeFrom((dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode other) {
          if (other == dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.getDefaultInstance()) return this;
          if (other.hasVNodeId()) {
            setVNodeId(other.getVNodeId());
          }
          if (other.hasVNodeCapacity()) {
            setVNodeCapacity(other.getVNodeCapacity());
          }
          if (other.hasVNodeType()) {
            setVNodeType(other.getVNodeType());
          }
          if (other.hasVNodeClass()) {
            setVNodeClass(other.getVNodeClass());
          }
          if (other.hasVNodeName()) {
            setVNodeName(other.getVNodeName());
          }
          this.mergeExtensionFields(other);
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasVNodeId()) {
            
            return false;
          }
          if (!extensionsAreInitialized()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                vNodeId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                vNodeCapacity_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                vNodeType_ = input.readInt32();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                vNodeClass_ = input.readBytes();
                break;
              }
              case 42: {
                bitField0_ |= 0x00000010;
                vNodeName_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 vNodeId = 1;
        private int vNodeId_ ;
        public boolean hasVNodeId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getVNodeId() {
          return vNodeId_;
        }
        public Builder setVNodeId(int value) {
          bitField0_ |= 0x00000001;
          vNodeId_ = value;
          onChanged();
          return this;
        }
        public Builder clearVNodeId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          vNodeId_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 vNodeCapacity = 2;
        private int vNodeCapacity_ ;
        public boolean hasVNodeCapacity() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getVNodeCapacity() {
          return vNodeCapacity_;
        }
        public Builder setVNodeCapacity(int value) {
          bitField0_ |= 0x00000002;
          vNodeCapacity_ = value;
          onChanged();
          return this;
        }
        public Builder clearVNodeCapacity() {
          bitField0_ = (bitField0_ & ~0x00000002);
          vNodeCapacity_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 vNodeType = 3;
        private int vNodeType_ ;
        public boolean hasVNodeType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getVNodeType() {
          return vNodeType_;
        }
        public Builder setVNodeType(int value) {
          bitField0_ |= 0x00000004;
          vNodeType_ = value;
          onChanged();
          return this;
        }
        public Builder clearVNodeType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          vNodeType_ = 0;
          onChanged();
          return this;
        }
        
        // optional string vNodeClass = 4;
        private java.lang.Object vNodeClass_ = "";
        public boolean hasVNodeClass() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public String getVNodeClass() {
          java.lang.Object ref = vNodeClass_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            vNodeClass_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setVNodeClass(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          vNodeClass_ = value;
          onChanged();
          return this;
        }
        public Builder clearVNodeClass() {
          bitField0_ = (bitField0_ & ~0x00000008);
          vNodeClass_ = getDefaultInstance().getVNodeClass();
          onChanged();
          return this;
        }
        void setVNodeClass(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000008;
          vNodeClass_ = value;
          onChanged();
        }
        
        // optional string vNodeName = 5;
        private java.lang.Object vNodeName_ = "";
        public boolean hasVNodeName() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public String getVNodeName() {
          java.lang.Object ref = vNodeName_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            vNodeName_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setVNodeName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          vNodeName_ = value;
          onChanged();
          return this;
        }
        public Builder clearVNodeName() {
          bitField0_ = (bitField0_ & ~0x00000010);
          vNodeName_ = getDefaultInstance().getVNodeName();
          onChanged();
          return this;
        }
        void setVNodeName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000010;
          vNodeName_ = value;
          onChanged();
        }
        
        // @@protoc_insertion_point(builder_scope:dap.cad.slicespec.impl.googleprotobuf.Slice.vNode)
      }
      
      static {
        defaultInstance = new vNode(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:dap.cad.slicespec.impl.googleprotobuf.Slice.vNode)
    }
    
    public interface vLinkOrBuilder extends
        com.google.protobuf.GeneratedMessage.
            ExtendableMessageOrBuilder<vLink> {
      
      // required int32 vLinkId = 1;
      boolean hasVLinkId();
      int getVLinkId();
      
      // required int32 vSrcID = 2;
      boolean hasVSrcID();
      int getVSrcID();
      
      // required int32 vDstID = 3;
      boolean hasVDstID();
      int getVDstID();
      
      // optional int32 vLinkCapacity = 4 [default = 1];
      boolean hasVLinkCapacity();
      int getVLinkCapacity();
      
      // optional int32 vLinkType = 5 [default = 1];
      boolean hasVLinkType();
      int getVLinkType();
    }
    public static final class vLink extends
        com.google.protobuf.GeneratedMessage.ExtendableMessage<
          vLink> implements vLinkOrBuilder {
      // Use vLink.newBuilder() to construct.
      private vLink(Builder builder) {
        super(builder);
      }
      private vLink(boolean noInit) {}
      
      private static final vLink defaultInstance;
      public static vLink getDefaultInstance() {
        return defaultInstance;
      }
      
      public vLink getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required int32 vLinkId = 1;
      public static final int VLINKID_FIELD_NUMBER = 1;
      private int vLinkId_;
      public boolean hasVLinkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getVLinkId() {
        return vLinkId_;
      }
      
      // required int32 vSrcID = 2;
      public static final int VSRCID_FIELD_NUMBER = 2;
      private int vSrcID_;
      public boolean hasVSrcID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getVSrcID() {
        return vSrcID_;
      }
      
      // required int32 vDstID = 3;
      public static final int VDSTID_FIELD_NUMBER = 3;
      private int vDstID_;
      public boolean hasVDstID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVDstID() {
        return vDstID_;
      }
      
      // optional int32 vLinkCapacity = 4 [default = 1];
      public static final int VLINKCAPACITY_FIELD_NUMBER = 4;
      private int vLinkCapacity_;
      public boolean hasVLinkCapacity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getVLinkCapacity() {
        return vLinkCapacity_;
      }
      
      // optional int32 vLinkType = 5 [default = 1];
      public static final int VLINKTYPE_FIELD_NUMBER = 5;
      private int vLinkType_;
      public boolean hasVLinkType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getVLinkType() {
        return vLinkType_;
      }
      
      private void initFields() {
        vLinkId_ = 0;
        vSrcID_ = 0;
        vDstID_ = 0;
        vLinkCapacity_ = 1;
        vLinkType_ = 1;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasVLinkId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasVSrcID()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasVDstID()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!extensionsAreInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        com.google.protobuf.GeneratedMessage
          .ExtendableMessage<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink>.ExtensionWriter extensionWriter =
            newExtensionWriter();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, vLinkId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, vSrcID_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, vDstID_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, vLinkCapacity_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, vLinkType_);
        }
        extensionWriter.writeUntil(536870912, output);
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, vLinkId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, vSrcID_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, vDstID_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, vLinkCapacity_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, vLinkType_);
        }
        size += extensionsSerializedSize();
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.ExtendableBuilder<
            dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink, Builder> implements dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_fieldAccessorTable;
        }
        
        // Construct using dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          vLinkId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          vSrcID_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          vDstID_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          vLinkCapacity_ = 1;
          bitField0_ = (bitField0_ & ~0x00000008);
          vLinkType_ = 1;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.getDescriptor();
        }
        
        public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink getDefaultInstanceForType() {
          return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.getDefaultInstance();
        }
        
        public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink build() {
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink buildPartial() {
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink result = new dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.vLinkId_ = vLinkId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.vSrcID_ = vSrcID_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.vDstID_ = vDstID_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.vLinkCapacity_ = vLinkCapacity_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.vLinkType_ = vLinkType_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink) {
            return mergeFrom((dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink other) {
          if (other == dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.getDefaultInstance()) return this;
          if (other.hasVLinkId()) {
            setVLinkId(other.getVLinkId());
          }
          if (other.hasVSrcID()) {
            setVSrcID(other.getVSrcID());
          }
          if (other.hasVDstID()) {
            setVDstID(other.getVDstID());
          }
          if (other.hasVLinkCapacity()) {
            setVLinkCapacity(other.getVLinkCapacity());
          }
          if (other.hasVLinkType()) {
            setVLinkType(other.getVLinkType());
          }
          this.mergeExtensionFields(other);
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasVLinkId()) {
            
            return false;
          }
          if (!hasVSrcID()) {
            
            return false;
          }
          if (!hasVDstID()) {
            
            return false;
          }
          if (!extensionsAreInitialized()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                vLinkId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                vSrcID_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                vDstID_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                vLinkCapacity_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                vLinkType_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 vLinkId = 1;
        private int vLinkId_ ;
        public boolean hasVLinkId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getVLinkId() {
          return vLinkId_;
        }
        public Builder setVLinkId(int value) {
          bitField0_ |= 0x00000001;
          vLinkId_ = value;
          onChanged();
          return this;
        }
        public Builder clearVLinkId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          vLinkId_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 vSrcID = 2;
        private int vSrcID_ ;
        public boolean hasVSrcID() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getVSrcID() {
          return vSrcID_;
        }
        public Builder setVSrcID(int value) {
          bitField0_ |= 0x00000002;
          vSrcID_ = value;
          onChanged();
          return this;
        }
        public Builder clearVSrcID() {
          bitField0_ = (bitField0_ & ~0x00000002);
          vSrcID_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 vDstID = 3;
        private int vDstID_ ;
        public boolean hasVDstID() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getVDstID() {
          return vDstID_;
        }
        public Builder setVDstID(int value) {
          bitField0_ |= 0x00000004;
          vDstID_ = value;
          onChanged();
          return this;
        }
        public Builder clearVDstID() {
          bitField0_ = (bitField0_ & ~0x00000004);
          vDstID_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 vLinkCapacity = 4 [default = 1];
        private int vLinkCapacity_ = 1;
        public boolean hasVLinkCapacity() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getVLinkCapacity() {
          return vLinkCapacity_;
        }
        public Builder setVLinkCapacity(int value) {
          bitField0_ |= 0x00000008;
          vLinkCapacity_ = value;
          onChanged();
          return this;
        }
        public Builder clearVLinkCapacity() {
          bitField0_ = (bitField0_ & ~0x00000008);
          vLinkCapacity_ = 1;
          onChanged();
          return this;
        }
        
        // optional int32 vLinkType = 5 [default = 1];
        private int vLinkType_ = 1;
        public boolean hasVLinkType() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public int getVLinkType() {
          return vLinkType_;
        }
        public Builder setVLinkType(int value) {
          bitField0_ |= 0x00000010;
          vLinkType_ = value;
          onChanged();
          return this;
        }
        public Builder clearVLinkType() {
          bitField0_ = (bitField0_ & ~0x00000010);
          vLinkType_ = 1;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:dap.cad.slicespec.impl.googleprotobuf.Slice.vLink)
      }
      
      static {
        defaultInstance = new vLink(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:dap.cad.slicespec.impl.googleprotobuf.Slice.vLink)
    }
    
    private int bitField0_;
    // required int32 sliceID = 1;
    public static final int SLICEID_FIELD_NUMBER = 1;
    private int sliceID_;
    public boolean hasSliceID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSliceID() {
      return sliceID_;
    }
    
    // optional string topology = 2;
    public static final int TOPOLOGY_FIELD_NUMBER = 2;
    private java.lang.Object topology_;
    public boolean hasTopology() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTopology() {
      java.lang.Object ref = topology_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          topology_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTopologyBytes() {
      java.lang.Object ref = topology_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        topology_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .dap.cad.slicespec.impl.googleprotobuf.Slice.vNode virtualnode = 4;
    public static final int VIRTUALNODE_FIELD_NUMBER = 4;
    private java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode> virtualnode_;
    public java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode> getVirtualnodeList() {
      return virtualnode_;
    }
    public java.util.List<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder> 
        getVirtualnodeOrBuilderList() {
      return virtualnode_;
    }
    public int getVirtualnodeCount() {
      return virtualnode_.size();
    }
    public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode getVirtualnode(int index) {
      return virtualnode_.get(index);
    }
    public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder getVirtualnodeOrBuilder(
        int index) {
      return virtualnode_.get(index);
    }
    
    // repeated .dap.cad.slicespec.impl.googleprotobuf.Slice.vLink virtuallink = 5;
    public static final int VIRTUALLINK_FIELD_NUMBER = 5;
    private java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink> virtuallink_;
    public java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink> getVirtuallinkList() {
      return virtuallink_;
    }
    public java.util.List<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder> 
        getVirtuallinkOrBuilderList() {
      return virtuallink_;
    }
    public int getVirtuallinkCount() {
      return virtuallink_.size();
    }
    public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink getVirtuallink(int index) {
      return virtuallink_.get(index);
    }
    public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder getVirtuallinkOrBuilder(
        int index) {
      return virtuallink_.get(index);
    }
    
    // optional int64 entryTime = 6;
    public static final int ENTRYTIME_FIELD_NUMBER = 6;
    private long entryTime_;
    public boolean hasEntryTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getEntryTime() {
      return entryTime_;
    }
    
    // optional int64 exitTime = 7;
    public static final int EXITTIME_FIELD_NUMBER = 7;
    private long exitTime_;
    public boolean hasExitTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public long getExitTime() {
      return exitTime_;
    }
    
    // optional int64 version = 8;
    public static final int VERSION_FIELD_NUMBER = 8;
    private long version_;
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getVersion() {
      return version_;
    }
    
    // repeated string policy = 9;
    public static final int POLICY_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList policy_;
    public java.util.List<String>
        getPolicyList() {
      return policy_;
    }
    public int getPolicyCount() {
      return policy_.size();
    }
    public String getPolicy(int index) {
      return policy_.get(index);
    }
    
    private void initFields() {
      sliceID_ = 0;
      topology_ = "";
      name_ = "";
      virtualnode_ = java.util.Collections.emptyList();
      virtuallink_ = java.util.Collections.emptyList();
      entryTime_ = 0L;
      exitTime_ = 0L;
      version_ = 0L;
      policy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSliceID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getVirtualnodeCount(); i++) {
        if (!getVirtualnode(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getVirtuallinkCount(); i++) {
        if (!getVirtuallink(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sliceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTopologyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      for (int i = 0; i < virtualnode_.size(); i++) {
        output.writeMessage(4, virtualnode_.get(i));
      }
      for (int i = 0; i < virtuallink_.size(); i++) {
        output.writeMessage(5, virtuallink_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(6, entryTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(7, exitTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(8, version_);
      }
      for (int i = 0; i < policy_.size(); i++) {
        output.writeBytes(9, policy_.getByteString(i));
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sliceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTopologyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      for (int i = 0; i < virtualnode_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, virtualnode_.get(i));
      }
      for (int i = 0; i < virtuallink_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, virtuallink_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, entryTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, exitTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, version_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < policy_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(policy_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPolicyList().size();
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice, Builder> implements dap.cad.slicespec.impl.googleprotobuf.SliceSpec.SliceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_fieldAccessorTable;
      }
      
      // Construct using dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVirtualnodeFieldBuilder();
          getVirtuallinkFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        sliceID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        topology_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (virtualnodeBuilder_ == null) {
          virtualnode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          virtualnodeBuilder_.clear();
        }
        if (virtuallinkBuilder_ == null) {
          virtuallink_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          virtuallinkBuilder_.clear();
        }
        entryTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        exitTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        version_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        policy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.getDescriptor();
      }
      
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice getDefaultInstanceForType() {
        return dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.getDefaultInstance();
      }
      
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice build() {
        dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice buildPartial() {
        dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice result = new dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sliceID_ = sliceID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.topology_ = topology_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (virtualnodeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            virtualnode_ = java.util.Collections.unmodifiableList(virtualnode_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.virtualnode_ = virtualnode_;
        } else {
          result.virtualnode_ = virtualnodeBuilder_.build();
        }
        if (virtuallinkBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            virtuallink_ = java.util.Collections.unmodifiableList(virtuallink_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.virtuallink_ = virtuallink_;
        } else {
          result.virtuallink_ = virtuallinkBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.entryTime_ = entryTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.exitTime_ = exitTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.version_ = version_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          policy_ = new com.google.protobuf.UnmodifiableLazyStringList(
              policy_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.policy_ = policy_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice) {
          return mergeFrom((dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice other) {
        if (other == dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.getDefaultInstance()) return this;
        if (other.hasSliceID()) {
          setSliceID(other.getSliceID());
        }
        if (other.hasTopology()) {
          setTopology(other.getTopology());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (virtualnodeBuilder_ == null) {
          if (!other.virtualnode_.isEmpty()) {
            if (virtualnode_.isEmpty()) {
              virtualnode_ = other.virtualnode_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureVirtualnodeIsMutable();
              virtualnode_.addAll(other.virtualnode_);
            }
            onChanged();
          }
        } else {
          if (!other.virtualnode_.isEmpty()) {
            if (virtualnodeBuilder_.isEmpty()) {
              virtualnodeBuilder_.dispose();
              virtualnodeBuilder_ = null;
              virtualnode_ = other.virtualnode_;
              bitField0_ = (bitField0_ & ~0x00000008);
              virtualnodeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVirtualnodeFieldBuilder() : null;
            } else {
              virtualnodeBuilder_.addAllMessages(other.virtualnode_);
            }
          }
        }
        if (virtuallinkBuilder_ == null) {
          if (!other.virtuallink_.isEmpty()) {
            if (virtuallink_.isEmpty()) {
              virtuallink_ = other.virtuallink_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureVirtuallinkIsMutable();
              virtuallink_.addAll(other.virtuallink_);
            }
            onChanged();
          }
        } else {
          if (!other.virtuallink_.isEmpty()) {
            if (virtuallinkBuilder_.isEmpty()) {
              virtuallinkBuilder_.dispose();
              virtuallinkBuilder_ = null;
              virtuallink_ = other.virtuallink_;
              bitField0_ = (bitField0_ & ~0x00000010);
              virtuallinkBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVirtuallinkFieldBuilder() : null;
            } else {
              virtuallinkBuilder_.addAllMessages(other.virtuallink_);
            }
          }
        }
        if (other.hasEntryTime()) {
          setEntryTime(other.getEntryTime());
        }
        if (other.hasExitTime()) {
          setExitTime(other.getExitTime());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (!other.policy_.isEmpty()) {
          if (policy_.isEmpty()) {
            policy_ = other.policy_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensurePolicyIsMutable();
            policy_.addAll(other.policy_);
          }
          onChanged();
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSliceID()) {
          
          return false;
        }
        for (int i = 0; i < getVirtualnodeCount(); i++) {
          if (!getVirtualnode(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getVirtuallinkCount(); i++) {
          if (!getVirtuallink(i).isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sliceID_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              topology_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 34: {
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder subBuilder = dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addVirtualnode(subBuilder.buildPartial());
              break;
            }
            case 42: {
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder subBuilder = dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addVirtuallink(subBuilder.buildPartial());
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              entryTime_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              exitTime_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              version_ = input.readInt64();
              break;
            }
            case 74: {
              ensurePolicyIsMutable();
              policy_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 sliceID = 1;
      private int sliceID_ ;
      public boolean hasSliceID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSliceID() {
        return sliceID_;
      }
      public Builder setSliceID(int value) {
        bitField0_ |= 0x00000001;
        sliceID_ = value;
        onChanged();
        return this;
      }
      public Builder clearSliceID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sliceID_ = 0;
        onChanged();
        return this;
      }
      
      // optional string topology = 2;
      private java.lang.Object topology_ = "";
      public boolean hasTopology() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTopology() {
        java.lang.Object ref = topology_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          topology_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTopology(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        topology_ = value;
        onChanged();
        return this;
      }
      public Builder clearTopology() {
        bitField0_ = (bitField0_ & ~0x00000002);
        topology_ = getDefaultInstance().getTopology();
        onChanged();
        return this;
      }
      void setTopology(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        topology_ = value;
        onChanged();
      }
      
      // optional string name = 3;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
      }
      
      // repeated .dap.cad.slicespec.impl.googleprotobuf.Slice.vNode virtualnode = 4;
      private java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode> virtualnode_ =
        java.util.Collections.emptyList();
      private void ensureVirtualnodeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          virtualnode_ = new java.util.ArrayList<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode>(virtualnode_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder> virtualnodeBuilder_;
      
      public java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode> getVirtualnodeList() {
        if (virtualnodeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(virtualnode_);
        } else {
          return virtualnodeBuilder_.getMessageList();
        }
      }
      public int getVirtualnodeCount() {
        if (virtualnodeBuilder_ == null) {
          return virtualnode_.size();
        } else {
          return virtualnodeBuilder_.getCount();
        }
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode getVirtualnode(int index) {
        if (virtualnodeBuilder_ == null) {
          return virtualnode_.get(index);
        } else {
          return virtualnodeBuilder_.getMessage(index);
        }
      }
      public Builder setVirtualnode(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode value) {
        if (virtualnodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVirtualnodeIsMutable();
          virtualnode_.set(index, value);
          onChanged();
        } else {
          virtualnodeBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setVirtualnode(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder builderForValue) {
        if (virtualnodeBuilder_ == null) {
          ensureVirtualnodeIsMutable();
          virtualnode_.set(index, builderForValue.build());
          onChanged();
        } else {
          virtualnodeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addVirtualnode(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode value) {
        if (virtualnodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVirtualnodeIsMutable();
          virtualnode_.add(value);
          onChanged();
        } else {
          virtualnodeBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addVirtualnode(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode value) {
        if (virtualnodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVirtualnodeIsMutable();
          virtualnode_.add(index, value);
          onChanged();
        } else {
          virtualnodeBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addVirtualnode(
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder builderForValue) {
        if (virtualnodeBuilder_ == null) {
          ensureVirtualnodeIsMutable();
          virtualnode_.add(builderForValue.build());
          onChanged();
        } else {
          virtualnodeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addVirtualnode(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder builderForValue) {
        if (virtualnodeBuilder_ == null) {
          ensureVirtualnodeIsMutable();
          virtualnode_.add(index, builderForValue.build());
          onChanged();
        } else {
          virtualnodeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllVirtualnode(
          java.lang.Iterable<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode> values) {
        if (virtualnodeBuilder_ == null) {
          ensureVirtualnodeIsMutable();
          super.addAll(values, virtualnode_);
          onChanged();
        } else {
          virtualnodeBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearVirtualnode() {
        if (virtualnodeBuilder_ == null) {
          virtualnode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          virtualnodeBuilder_.clear();
        }
        return this;
      }
      public Builder removeVirtualnode(int index) {
        if (virtualnodeBuilder_ == null) {
          ensureVirtualnodeIsMutable();
          virtualnode_.remove(index);
          onChanged();
        } else {
          virtualnodeBuilder_.remove(index);
        }
        return this;
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder getVirtualnodeBuilder(
          int index) {
        return getVirtualnodeFieldBuilder().getBuilder(index);
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder getVirtualnodeOrBuilder(
          int index) {
        if (virtualnodeBuilder_ == null) {
          return virtualnode_.get(index);  } else {
          return virtualnodeBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder> 
           getVirtualnodeOrBuilderList() {
        if (virtualnodeBuilder_ != null) {
          return virtualnodeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(virtualnode_);
        }
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder addVirtualnodeBuilder() {
        return getVirtualnodeFieldBuilder().addBuilder(
            dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.getDefaultInstance());
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder addVirtualnodeBuilder(
          int index) {
        return getVirtualnodeFieldBuilder().addBuilder(
            index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.getDefaultInstance());
      }
      public java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder> 
           getVirtualnodeBuilderList() {
        return getVirtualnodeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder> 
          getVirtualnodeFieldBuilder() {
        if (virtualnodeBuilder_ == null) {
          virtualnodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNodeOrBuilder>(
                  virtualnode_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          virtualnode_ = null;
        }
        return virtualnodeBuilder_;
      }
      
      // repeated .dap.cad.slicespec.impl.googleprotobuf.Slice.vLink virtuallink = 5;
      private java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink> virtuallink_ =
        java.util.Collections.emptyList();
      private void ensureVirtuallinkIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          virtuallink_ = new java.util.ArrayList<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink>(virtuallink_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder> virtuallinkBuilder_;
      
      public java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink> getVirtuallinkList() {
        if (virtuallinkBuilder_ == null) {
          return java.util.Collections.unmodifiableList(virtuallink_);
        } else {
          return virtuallinkBuilder_.getMessageList();
        }
      }
      public int getVirtuallinkCount() {
        if (virtuallinkBuilder_ == null) {
          return virtuallink_.size();
        } else {
          return virtuallinkBuilder_.getCount();
        }
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink getVirtuallink(int index) {
        if (virtuallinkBuilder_ == null) {
          return virtuallink_.get(index);
        } else {
          return virtuallinkBuilder_.getMessage(index);
        }
      }
      public Builder setVirtuallink(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink value) {
        if (virtuallinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVirtuallinkIsMutable();
          virtuallink_.set(index, value);
          onChanged();
        } else {
          virtuallinkBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setVirtuallink(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder builderForValue) {
        if (virtuallinkBuilder_ == null) {
          ensureVirtuallinkIsMutable();
          virtuallink_.set(index, builderForValue.build());
          onChanged();
        } else {
          virtuallinkBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addVirtuallink(dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink value) {
        if (virtuallinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVirtuallinkIsMutable();
          virtuallink_.add(value);
          onChanged();
        } else {
          virtuallinkBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addVirtuallink(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink value) {
        if (virtuallinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVirtuallinkIsMutable();
          virtuallink_.add(index, value);
          onChanged();
        } else {
          virtuallinkBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addVirtuallink(
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder builderForValue) {
        if (virtuallinkBuilder_ == null) {
          ensureVirtuallinkIsMutable();
          virtuallink_.add(builderForValue.build());
          onChanged();
        } else {
          virtuallinkBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addVirtuallink(
          int index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder builderForValue) {
        if (virtuallinkBuilder_ == null) {
          ensureVirtuallinkIsMutable();
          virtuallink_.add(index, builderForValue.build());
          onChanged();
        } else {
          virtuallinkBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllVirtuallink(
          java.lang.Iterable<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink> values) {
        if (virtuallinkBuilder_ == null) {
          ensureVirtuallinkIsMutable();
          super.addAll(values, virtuallink_);
          onChanged();
        } else {
          virtuallinkBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearVirtuallink() {
        if (virtuallinkBuilder_ == null) {
          virtuallink_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          virtuallinkBuilder_.clear();
        }
        return this;
      }
      public Builder removeVirtuallink(int index) {
        if (virtuallinkBuilder_ == null) {
          ensureVirtuallinkIsMutable();
          virtuallink_.remove(index);
          onChanged();
        } else {
          virtuallinkBuilder_.remove(index);
        }
        return this;
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder getVirtuallinkBuilder(
          int index) {
        return getVirtuallinkFieldBuilder().getBuilder(index);
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder getVirtuallinkOrBuilder(
          int index) {
        if (virtuallinkBuilder_ == null) {
          return virtuallink_.get(index);  } else {
          return virtuallinkBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder> 
           getVirtuallinkOrBuilderList() {
        if (virtuallinkBuilder_ != null) {
          return virtuallinkBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(virtuallink_);
        }
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder addVirtuallinkBuilder() {
        return getVirtuallinkFieldBuilder().addBuilder(
            dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.getDefaultInstance());
      }
      public dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder addVirtuallinkBuilder(
          int index) {
        return getVirtuallinkFieldBuilder().addBuilder(
            index, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.getDefaultInstance());
      }
      public java.util.List<dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder> 
           getVirtuallinkBuilderList() {
        return getVirtuallinkFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder> 
          getVirtuallinkFieldBuilder() {
        if (virtuallinkBuilder_ == null) {
          virtuallinkBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder, dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLinkOrBuilder>(
                  virtuallink_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          virtuallink_ = null;
        }
        return virtuallinkBuilder_;
      }
      
      // optional int64 entryTime = 6;
      private long entryTime_ ;
      public boolean hasEntryTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getEntryTime() {
        return entryTime_;
      }
      public Builder setEntryTime(long value) {
        bitField0_ |= 0x00000020;
        entryTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntryTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        entryTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 exitTime = 7;
      private long exitTime_ ;
      public boolean hasExitTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getExitTime() {
        return exitTime_;
      }
      public Builder setExitTime(long value) {
        bitField0_ |= 0x00000040;
        exitTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearExitTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        exitTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 version = 8;
      private long version_ ;
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getVersion() {
        return version_;
      }
      public Builder setVersion(long value) {
        bitField0_ |= 0x00000080;
        version_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000080);
        version_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated string policy = 9;
      private com.google.protobuf.LazyStringList policy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePolicyIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          policy_ = new com.google.protobuf.LazyStringArrayList(policy_);
          bitField0_ |= 0x00000100;
         }
      }
      public java.util.List<String>
          getPolicyList() {
        return java.util.Collections.unmodifiableList(policy_);
      }
      public int getPolicyCount() {
        return policy_.size();
      }
      public String getPolicy(int index) {
        return policy_.get(index);
      }
      public Builder setPolicy(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePolicyIsMutable();
        policy_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPolicy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePolicyIsMutable();
        policy_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPolicy(
          java.lang.Iterable<String> values) {
        ensurePolicyIsMutable();
        super.addAll(values, policy_);
        onChanged();
        return this;
      }
      public Builder clearPolicy() {
        policy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      void addPolicy(com.google.protobuf.ByteString value) {
        ensurePolicyIsMutable();
        policy_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:dap.cad.slicespec.impl.googleprotobuf.Slice)
    }
    
    static {
      defaultInstance = new Slice(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:dap.cad.slicespec.impl.googleprotobuf.Slice)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5dap/cad/slicespec/impl/googleprotobuf/" +
      "sliceSpec.proto\022%dap.cad.slicespec.impl." +
      "googleprotobuf\"\203\004\n\005Slice\022\017\n\007sliceID\030\001 \002(" +
      "\005\022\020\n\010topology\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022G\n\013vir" +
      "tualnode\030\004 \003(\01322.dap.cad.slicespec.impl." +
      "googleprotobuf.Slice.vNode\022G\n\013virtuallin" +
      "k\030\005 \003(\01322.dap.cad.slicespec.impl.googlep" +
      "rotobuf.Slice.vLink\022\021\n\tentryTime\030\006 \001(\003\022\020" +
      "\n\010exitTime\030\007 \001(\003\022\017\n\007version\030\010 \001(\003\022\016\n\006pol" +
      "icy\030\t \003(\t\032s\n\005vNode\022\017\n\007vNodeId\030\001 \002(\005\022\025\n\rv",
      "NodeCapacity\030\002 \001(\005\022\021\n\tvNodeType\030\003 \001(\005\022\022\n" +
      "\nvNodeClass\030\004 \001(\t\022\021\n\tvNodeName\030\005 \001(\t*\010\010\006" +
      "\020\200\200\200\200\002\032r\n\005vLink\022\017\n\007vLinkId\030\001 \002(\005\022\016\n\006vSrc" +
      "ID\030\002 \002(\005\022\016\n\006vDstID\030\003 \002(\005\022\030\n\rvLinkCapacit" +
      "y\030\004 \001(\005:\0011\022\024\n\tvLinkType\030\005 \001(\005:\0011*\010\010\006\020\200\200\200" +
      "\200\002*\010\010\n\020\200\200\200\200\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_descriptor,
              new java.lang.String[] { "SliceID", "Topology", "Name", "Virtualnode", "Virtuallink", "EntryTime", "ExitTime", "Version", "Policy", },
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.class,
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.Builder.class);
          internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_descriptor =
            internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_descriptor.getNestedTypes().get(0);
          internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vNode_descriptor,
              new java.lang.String[] { "VNodeId", "VNodeCapacity", "VNodeType", "VNodeClass", "VNodeName", },
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.class,
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vNode.Builder.class);
          internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_descriptor =
            internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_descriptor.getNestedTypes().get(1);
          internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dap_cad_slicespec_impl_googleprotobuf_Slice_vLink_descriptor,
              new java.lang.String[] { "VLinkId", "VSrcID", "VDstID", "VLinkCapacity", "VLinkType", },
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.class,
              dap.cad.slicespec.impl.googleprotobuf.SliceSpec.Slice.vLink.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
