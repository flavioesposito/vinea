/**
 * @copyright 2012 Computer Science Department, Recursive InterNetworking Architecture (RINA) laboratory, Boston University. 
 * All rights reserved. Permission to use, copy, modify, and distribute this software and its documentation
 * for any purpose and without fee is hereby granted, provided that the above copyright notice appear in all 
 * copies and that both the copyright notice and this permission notice appear in supporting documentation. 
 * The RINA laboratory of the Computer Science Department at Boston University makes no 
 * representations about the suitability of this software for any purpose. 
 */


/**
 * @author Yuefeng Wang and Flavio Esposito. Computer Science Department, Boston University
 * @version 1.0 
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DTP.proto

package rina.dtp.impl.googleprotobuf;

public final class DTP {
	private DTP() {}
	public static void registerAllExtensions(
			com.google.protobuf.ExtensionRegistry registry) {
	}
	public enum opCode_t
	implements com.google.protobuf.ProtocolMessageEnum {
		M_CDAP(0, 0),
		M_DTP(1, 1),
		;

		public static final int M_CDAP_VALUE = 0;
		public static final int M_DTP_VALUE = 1;


		public final int getNumber() { return value; }

		public static opCode_t valueOf(int value) {
			switch (value) {
			case 0: return M_CDAP;
			case 1: return M_DTP;
			default: return null;
			}
		}

		public static com.google.protobuf.Internal.EnumLiteMap<opCode_t>
		internalGetValueMap() {
			return internalValueMap;
		}
		private static com.google.protobuf.Internal.EnumLiteMap<opCode_t>
		internalValueMap =
			new com.google.protobuf.Internal.EnumLiteMap<opCode_t>() {
				public opCode_t findValueByNumber(int number) {
					return opCode_t.valueOf(number);
				}
			};

			public final com.google.protobuf.Descriptors.EnumValueDescriptor
			getValueDescriptor() {
				return getDescriptor().getValues().get(index);
			}
			public final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptorForType() {
				return getDescriptor();
			}
			public static final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptor() {
				return rina.dtp.impl.googleprotobuf.DTP.getDescriptor().getEnumTypes().get(0);
			}

			private static final opCode_t[] VALUES = {
				M_CDAP, M_DTP, 
			};

			public static opCode_t valueOf(
					com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
				if (desc.getType() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException(
							"EnumValueDescriptor is not for this type.");
				}
				return VALUES[desc.getIndex()];
			}

			private final int index;
			private final int value;

			private opCode_t(int index, int value) {
				this.index = index;
				this.value = value;
			}

			// @@protoc_insertion_point(enum_scope:rina.dtp.impl.googleprotobuf.opCode_t)
	}

	public interface DTPMessageOrBuilder
	extends com.google.protobuf.MessageOrBuilder {

		// optional int32 absSyntax = 1;
		boolean hasAbsSyntax();
		int getAbsSyntax();

		// optional int64 version = 2;
		boolean hasVersion();
		long getVersion();

		// optional .rina.dtp.impl.googleprotobuf.opCode_t opCode = 3;
		boolean hasOpCode();
		rina.dtp.impl.googleprotobuf.DTP.opCode_t getOpCode();

		// optional string destIPCName = 4;
		boolean hasDestIPCName();
		String getDestIPCName();

		// optional int32 destPortID = 5;
		boolean hasDestPortID();
		int getDestPortID();

		// optional string srcIPCName = 6;
		boolean hasSrcIPCName();
		String getSrcIPCName();

		// optional int32 srcPortID = 7;
		boolean hasSrcPortID();
		int getSrcPortID();

		// optional bytes payload = 8;
		boolean hasPayload();
		com.google.protobuf.ByteString getPayload();
	}
	public static final class DTPMessage extends
	com.google.protobuf.GeneratedMessage
	implements DTPMessageOrBuilder {
		// Use DTPMessage.newBuilder() to construct.
		private DTPMessage(Builder builder) {
			super(builder);
		}
		private DTPMessage(boolean noInit) {}

		private static final DTPMessage defaultInstance;
		public static DTPMessage getDefaultInstance() {
			return defaultInstance;
		}

		public DTPMessage getDefaultInstanceForType() {
			return defaultInstance;
		}

		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return rina.dtp.impl.googleprotobuf.DTP.internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_descriptor;
		}

		protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return rina.dtp.impl.googleprotobuf.DTP.internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_fieldAccessorTable;
		}

		private int bitField0_;
		// optional int32 absSyntax = 1;
		public static final int ABSSYNTAX_FIELD_NUMBER = 1;
		private int absSyntax_;
		public boolean hasAbsSyntax() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}
		public int getAbsSyntax() {
			return absSyntax_;
		}

		// optional int64 version = 2;
		public static final int VERSION_FIELD_NUMBER = 2;
		private long version_;
		public boolean hasVersion() {
			return ((bitField0_ & 0x00000002) == 0x00000002);
		}
		public long getVersion() {
			return version_;
		}

		// optional .rina.dtp.impl.googleprotobuf.opCode_t opCode = 3;
		public static final int OPCODE_FIELD_NUMBER = 3;
		private rina.dtp.impl.googleprotobuf.DTP.opCode_t opCode_;
		public boolean hasOpCode() {
			return ((bitField0_ & 0x00000004) == 0x00000004);
		}
		public rina.dtp.impl.googleprotobuf.DTP.opCode_t getOpCode() {
			return opCode_;
		}

		// optional string destIPCName = 4;
		public static final int DESTIPCNAME_FIELD_NUMBER = 4;
		private java.lang.Object destIPCName_;
		public boolean hasDestIPCName() {
			return ((bitField0_ & 0x00000008) == 0x00000008);
		}
		public String getDestIPCName() {
			java.lang.Object ref = destIPCName_;
			if (ref instanceof String) {
				return (String) ref;
			} else {
				com.google.protobuf.ByteString bs = 
					(com.google.protobuf.ByteString) ref;
				String s = bs.toStringUtf8();
				if (com.google.protobuf.Internal.isValidUtf8(bs)) {
					destIPCName_ = s;
				}
				return s;
			}
		}
		private com.google.protobuf.ByteString getDestIPCNameBytes() {
			java.lang.Object ref = destIPCName_;
			if (ref instanceof String) {
				com.google.protobuf.ByteString b = 
					com.google.protobuf.ByteString.copyFromUtf8((String) ref);
				destIPCName_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		// optional int32 destPortID = 5;
		public static final int DESTPORTID_FIELD_NUMBER = 5;
		private int destPortID_;
		public boolean hasDestPortID() {
			return ((bitField0_ & 0x00000010) == 0x00000010);
		}
		public int getDestPortID() {
			return destPortID_;
		}

		// optional string srcIPCName = 6;
		public static final int SRCIPCNAME_FIELD_NUMBER = 6;
		private java.lang.Object srcIPCName_;
		public boolean hasSrcIPCName() {
			return ((bitField0_ & 0x00000020) == 0x00000020);
		}
		public String getSrcIPCName() {
			java.lang.Object ref = srcIPCName_;
			if (ref instanceof String) {
				return (String) ref;
			} else {
				com.google.protobuf.ByteString bs = 
					(com.google.protobuf.ByteString) ref;
				String s = bs.toStringUtf8();
				if (com.google.protobuf.Internal.isValidUtf8(bs)) {
					srcIPCName_ = s;
				}
				return s;
			}
		}
		private com.google.protobuf.ByteString getSrcIPCNameBytes() {
			java.lang.Object ref = srcIPCName_;
			if (ref instanceof String) {
				com.google.protobuf.ByteString b = 
					com.google.protobuf.ByteString.copyFromUtf8((String) ref);
				srcIPCName_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		// optional int32 srcPortID = 7;
		public static final int SRCPORTID_FIELD_NUMBER = 7;
		private int srcPortID_;
		public boolean hasSrcPortID() {
			return ((bitField0_ & 0x00000040) == 0x00000040);
		}
		public int getSrcPortID() {
			return srcPortID_;
		}

		// optional bytes payload = 8;
		public static final int PAYLOAD_FIELD_NUMBER = 8;
		private com.google.protobuf.ByteString payload_;
		public boolean hasPayload() {
			return ((bitField0_ & 0x00000080) == 0x00000080);
		}
		public com.google.protobuf.ByteString getPayload() {
			return payload_;
		}

		private void initFields() {
			absSyntax_ = 0;
			version_ = 0L;
			opCode_ = rina.dtp.impl.googleprotobuf.DTP.opCode_t.M_CDAP;
			destIPCName_ = "";
			destPortID_ = 0;
			srcIPCName_ = "";
			srcPortID_ = 0;
			payload_ = com.google.protobuf.ByteString.EMPTY;
		}
		private byte memoizedIsInitialized = -1;
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized != -1) return isInitialized == 1;

			memoizedIsInitialized = 1;
			return true;
		}

		public void writeTo(com.google.protobuf.CodedOutputStream output)
		throws java.io.IOException {
			getSerializedSize();
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				output.writeInt32(1, absSyntax_);
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				output.writeInt64(2, version_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				output.writeEnum(3, opCode_.getNumber());
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				output.writeBytes(4, getDestIPCNameBytes());
			}
			if (((bitField0_ & 0x00000010) == 0x00000010)) {
				output.writeInt32(5, destPortID_);
			}
			if (((bitField0_ & 0x00000020) == 0x00000020)) {
				output.writeBytes(6, getSrcIPCNameBytes());
			}
			if (((bitField0_ & 0x00000040) == 0x00000040)) {
				output.writeInt32(7, srcPortID_);
			}
			if (((bitField0_ & 0x00000080) == 0x00000080)) {
				output.writeBytes(8, payload_);
			}
			getUnknownFields().writeTo(output);
		}

		private int memoizedSerializedSize = -1;
		public int getSerializedSize() {
			int size = memoizedSerializedSize;
			if (size != -1) return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.CodedOutputStream
				.computeInt32Size(1, absSyntax_);
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				size += com.google.protobuf.CodedOutputStream
				.computeInt64Size(2, version_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				size += com.google.protobuf.CodedOutputStream
				.computeEnumSize(3, opCode_.getNumber());
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				size += com.google.protobuf.CodedOutputStream
				.computeBytesSize(4, getDestIPCNameBytes());
			}
			if (((bitField0_ & 0x00000010) == 0x00000010)) {
				size += com.google.protobuf.CodedOutputStream
				.computeInt32Size(5, destPortID_);
			}
			if (((bitField0_ & 0x00000020) == 0x00000020)) {
				size += com.google.protobuf.CodedOutputStream
				.computeBytesSize(6, getSrcIPCNameBytes());
			}
			if (((bitField0_ & 0x00000040) == 0x00000040)) {
				size += com.google.protobuf.CodedOutputStream
				.computeInt32Size(7, srcPortID_);
			}
			if (((bitField0_ & 0x00000080) == 0x00000080)) {
				size += com.google.protobuf.CodedOutputStream
				.computeBytesSize(8, payload_);
			}
			size += getUnknownFields().getSerializedSize();
			memoizedSerializedSize = size;
			return size;
		}

		private static final long serialVersionUID = 0L;
		@java.lang.Override
		protected java.lang.Object writeReplace()
		throws java.io.ObjectStreamException {
			return super.writeReplace();
		}

		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(
				com.google.protobuf.ByteString data)
		throws com.google.protobuf.InvalidProtocolBufferException {
			return newBuilder().mergeFrom(data).buildParsed();
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
		throws com.google.protobuf.InvalidProtocolBufferException {
			return newBuilder().mergeFrom(data, extensionRegistry)
			.buildParsed();
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(byte[] data)
		throws com.google.protobuf.InvalidProtocolBufferException {
			return newBuilder().mergeFrom(data).buildParsed();
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
		throws com.google.protobuf.InvalidProtocolBufferException {
			return newBuilder().mergeFrom(data, extensionRegistry)
			.buildParsed();
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(java.io.InputStream input)
		throws java.io.IOException {
			return newBuilder().mergeFrom(input).buildParsed();
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
		throws java.io.IOException {
			return newBuilder().mergeFrom(input, extensionRegistry)
			.buildParsed();
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseDelimitedFrom(java.io.InputStream input)
		throws java.io.IOException {
			Builder builder = newBuilder();
			if (builder.mergeDelimitedFrom(input)) {
				return builder.buildParsed();
			} else {
				return null;
			}
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
		throws java.io.IOException {
			Builder builder = newBuilder();
			if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
				return builder.buildParsed();
			} else {
				return null;
			}
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(
				com.google.protobuf.CodedInputStream input)
		throws java.io.IOException {
			return newBuilder().mergeFrom(input).buildParsed();
		}
		public static rina.dtp.impl.googleprotobuf.DTP.DTPMessage parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
		throws java.io.IOException {
			return newBuilder().mergeFrom(input, extensionRegistry)
			.buildParsed();
		}

		public static Builder newBuilder() { return Builder.create(); }
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder(rina.dtp.impl.googleprotobuf.DTP.DTPMessage prototype) {
			return newBuilder().mergeFrom(prototype);
		}
		public Builder toBuilder() { return newBuilder(this); }

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessage.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		public static final class Builder extends
		com.google.protobuf.GeneratedMessage.Builder<Builder>
		implements rina.dtp.impl.googleprotobuf.DTP.DTPMessageOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return rina.dtp.impl.googleprotobuf.DTP.internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_descriptor;
			}

			protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return rina.dtp.impl.googleprotobuf.DTP.internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_fieldAccessorTable;
			}

			// Construct using rina.dtp.impl.googleprotobuf.DTP.DTPMessage.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
				}
			}
			private static Builder create() {
				return new Builder();
			}

			public Builder clear() {
				super.clear();
				absSyntax_ = 0;
				bitField0_ = (bitField0_ & ~0x00000001);
				version_ = 0L;
				bitField0_ = (bitField0_ & ~0x00000002);
				opCode_ = rina.dtp.impl.googleprotobuf.DTP.opCode_t.M_CDAP;
				bitField0_ = (bitField0_ & ~0x00000004);
				destIPCName_ = "";
				bitField0_ = (bitField0_ & ~0x00000008);
				destPortID_ = 0;
				bitField0_ = (bitField0_ & ~0x00000010);
				srcIPCName_ = "";
				bitField0_ = (bitField0_ & ~0x00000020);
				srcPortID_ = 0;
				bitField0_ = (bitField0_ & ~0x00000040);
				payload_ = com.google.protobuf.ByteString.EMPTY;
				bitField0_ = (bitField0_ & ~0x00000080);
				return this;
			}

			public Builder clone() {
				return create().mergeFrom(buildPartial());
			}

			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return rina.dtp.impl.googleprotobuf.DTP.DTPMessage.getDescriptor();
			}

			public rina.dtp.impl.googleprotobuf.DTP.DTPMessage getDefaultInstanceForType() {
				return rina.dtp.impl.googleprotobuf.DTP.DTPMessage.getDefaultInstance();
			}

			public rina.dtp.impl.googleprotobuf.DTP.DTPMessage build() {
				rina.dtp.impl.googleprotobuf.DTP.DTPMessage result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			private rina.dtp.impl.googleprotobuf.DTP.DTPMessage buildParsed()
			throws com.google.protobuf.InvalidProtocolBufferException {
				rina.dtp.impl.googleprotobuf.DTP.DTPMessage result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(
							result).asInvalidProtocolBufferException();
				}
				return result;
			}

			public rina.dtp.impl.googleprotobuf.DTP.DTPMessage buildPartial() {
				rina.dtp.impl.googleprotobuf.DTP.DTPMessage result = new rina.dtp.impl.googleprotobuf.DTP.DTPMessage(this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.absSyntax_ = absSyntax_;
				if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
					to_bitField0_ |= 0x00000002;
				}
				result.version_ = version_;
				if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
					to_bitField0_ |= 0x00000004;
				}
				result.opCode_ = opCode_;
				if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
					to_bitField0_ |= 0x00000008;
				}
				result.destIPCName_ = destIPCName_;
				if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
					to_bitField0_ |= 0x00000010;
				}
				result.destPortID_ = destPortID_;
				if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
					to_bitField0_ |= 0x00000020;
				}
				result.srcIPCName_ = srcIPCName_;
				if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
					to_bitField0_ |= 0x00000040;
				}
				result.srcPortID_ = srcPortID_;
				if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
					to_bitField0_ |= 0x00000080;
				}
				result.payload_ = payload_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof rina.dtp.impl.googleprotobuf.DTP.DTPMessage) {
					return mergeFrom((rina.dtp.impl.googleprotobuf.DTP.DTPMessage)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(rina.dtp.impl.googleprotobuf.DTP.DTPMessage other) {
				if (other == rina.dtp.impl.googleprotobuf.DTP.DTPMessage.getDefaultInstance()) return this;
				if (other.hasAbsSyntax()) {
					setAbsSyntax(other.getAbsSyntax());
				}
				if (other.hasVersion()) {
					setVersion(other.getVersion());
				}
				if (other.hasOpCode()) {
					setOpCode(other.getOpCode());
				}
				if (other.hasDestIPCName()) {
					setDestIPCName(other.getDestIPCName());
				}
				if (other.hasDestPortID()) {
					setDestPortID(other.getDestPortID());
				}
				if (other.hasSrcIPCName()) {
					setSrcIPCName(other.getSrcIPCName());
				}
				if (other.hasSrcPortID()) {
					setSrcPortID(other.getSrcPortID());
				}
				if (other.hasPayload()) {
					setPayload(other.getPayload());
				}
				this.mergeUnknownFields(other.getUnknownFields());
				return this;
			}

			public final boolean isInitialized() {
				return true;
			}

			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
			throws java.io.IOException {
				com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder(
							this.getUnknownFields());
				while (true) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						this.setUnknownFields(unknownFields.build());
						onChanged();
						return this;
					default: {
						if (!parseUnknownField(input, unknownFields,
								extensionRegistry, tag)) {
							this.setUnknownFields(unknownFields.build());
							onChanged();
							return this;
						}
						break;
					}
					case 8: {
						bitField0_ |= 0x00000001;
						absSyntax_ = input.readInt32();
						break;
					}
					case 16: {
						bitField0_ |= 0x00000002;
						version_ = input.readInt64();
						break;
					}
					case 24: {
						int rawValue = input.readEnum();
						rina.dtp.impl.googleprotobuf.DTP.opCode_t value = rina.dtp.impl.googleprotobuf.DTP.opCode_t.valueOf(rawValue);
						if (value == null) {
							unknownFields.mergeVarintField(3, rawValue);
						} else {
							bitField0_ |= 0x00000004;
							opCode_ = value;
						}
						break;
					}
					case 34: {
						bitField0_ |= 0x00000008;
						destIPCName_ = input.readBytes();
						break;
					}
					case 40: {
						bitField0_ |= 0x00000010;
						destPortID_ = input.readInt32();
						break;
					}
					case 50: {
						bitField0_ |= 0x00000020;
						srcIPCName_ = input.readBytes();
						break;
					}
					case 56: {
						bitField0_ |= 0x00000040;
						srcPortID_ = input.readInt32();
						break;
					}
					case 66: {
						bitField0_ |= 0x00000080;
						payload_ = input.readBytes();
						break;
					}
					}
				}
			}

			private int bitField0_;

			// optional int32 absSyntax = 1;
			private int absSyntax_ ;
			public boolean hasAbsSyntax() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}
			public int getAbsSyntax() {
				return absSyntax_;
			}
			public Builder setAbsSyntax(int value) {
				bitField0_ |= 0x00000001;
				absSyntax_ = value;
				onChanged();
				return this;
			}
			public Builder clearAbsSyntax() {
				bitField0_ = (bitField0_ & ~0x00000001);
				absSyntax_ = 0;
				onChanged();
				return this;
			}

			// optional int64 version = 2;
			private long version_ ;
			public boolean hasVersion() {
				return ((bitField0_ & 0x00000002) == 0x00000002);
			}
			public long getVersion() {
				return version_;
			}
			public Builder setVersion(long value) {
				bitField0_ |= 0x00000002;
				version_ = value;
				onChanged();
				return this;
			}
			public Builder clearVersion() {
				bitField0_ = (bitField0_ & ~0x00000002);
				version_ = 0L;
				onChanged();
				return this;
			}

			// optional .rina.dtp.impl.googleprotobuf.opCode_t opCode = 3;
			private rina.dtp.impl.googleprotobuf.DTP.opCode_t opCode_ = rina.dtp.impl.googleprotobuf.DTP.opCode_t.M_CDAP;
			public boolean hasOpCode() {
				return ((bitField0_ & 0x00000004) == 0x00000004);
			}
			public rina.dtp.impl.googleprotobuf.DTP.opCode_t getOpCode() {
				return opCode_;
			}
			public Builder setOpCode(rina.dtp.impl.googleprotobuf.DTP.opCode_t value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				opCode_ = value;
				onChanged();
				return this;
			}
			public Builder clearOpCode() {
				bitField0_ = (bitField0_ & ~0x00000004);
				opCode_ = rina.dtp.impl.googleprotobuf.DTP.opCode_t.M_CDAP;
				onChanged();
				return this;
			}

			// optional string destIPCName = 4;
			private java.lang.Object destIPCName_ = "";
			public boolean hasDestIPCName() {
				return ((bitField0_ & 0x00000008) == 0x00000008);
			}
			public String getDestIPCName() {
				java.lang.Object ref = destIPCName_;
				if (!(ref instanceof String)) {
					String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
					destIPCName_ = s;
					return s;
				} else {
					return (String) ref;
				}
			}
			public Builder setDestIPCName(String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000008;
				destIPCName_ = value;
				onChanged();
				return this;
			}
			public Builder clearDestIPCName() {
				bitField0_ = (bitField0_ & ~0x00000008);
				destIPCName_ = getDefaultInstance().getDestIPCName();
				onChanged();
				return this;
			}
			void setDestIPCName(com.google.protobuf.ByteString value) {
				bitField0_ |= 0x00000008;
				destIPCName_ = value;
				onChanged();
			}

			// optional int32 destPortID = 5;
			private int destPortID_ ;
			public boolean hasDestPortID() {
				return ((bitField0_ & 0x00000010) == 0x00000010);
			}
			public int getDestPortID() {
				return destPortID_;
			}
			public Builder setDestPortID(int value) {
				bitField0_ |= 0x00000010;
				destPortID_ = value;
				onChanged();
				return this;
			}
			public Builder clearDestPortID() {
				bitField0_ = (bitField0_ & ~0x00000010);
				destPortID_ = 0;
				onChanged();
				return this;
			}

			// optional string srcIPCName = 6;
			private java.lang.Object srcIPCName_ = "";
			public boolean hasSrcIPCName() {
				return ((bitField0_ & 0x00000020) == 0x00000020);
			}
			public String getSrcIPCName() {
				java.lang.Object ref = srcIPCName_;
				if (!(ref instanceof String)) {
					String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
					srcIPCName_ = s;
					return s;
				} else {
					return (String) ref;
				}
			}
			public Builder setSrcIPCName(String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000020;
				srcIPCName_ = value;
				onChanged();
				return this;
			}
			public Builder clearSrcIPCName() {
				bitField0_ = (bitField0_ & ~0x00000020);
				srcIPCName_ = getDefaultInstance().getSrcIPCName();
				onChanged();
				return this;
			}
			void setSrcIPCName(com.google.protobuf.ByteString value) {
				bitField0_ |= 0x00000020;
				srcIPCName_ = value;
				onChanged();
			}

			// optional int32 srcPortID = 7;
			private int srcPortID_ ;
			public boolean hasSrcPortID() {
				return ((bitField0_ & 0x00000040) == 0x00000040);
			}
			public int getSrcPortID() {
				return srcPortID_;
			}
			public Builder setSrcPortID(int value) {
				bitField0_ |= 0x00000040;
				srcPortID_ = value;
				onChanged();
				return this;
			}
			public Builder clearSrcPortID() {
				bitField0_ = (bitField0_ & ~0x00000040);
				srcPortID_ = 0;
				onChanged();
				return this;
			}

			// optional bytes payload = 8;
			private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
			public boolean hasPayload() {
				return ((bitField0_ & 0x00000080) == 0x00000080);
			}
			public com.google.protobuf.ByteString getPayload() {
				return payload_;
			}
			public Builder setPayload(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000080;
				payload_ = value;
				onChanged();
				return this;
			}
			public Builder clearPayload() {
				bitField0_ = (bitField0_ & ~0x00000080);
				payload_ = getDefaultInstance().getPayload();
				onChanged();
				return this;
			}

			// @@protoc_insertion_point(builder_scope:rina.dtp.impl.googleprotobuf.DTPMessage)
		}

		static {
			defaultInstance = new DTPMessage(true);
			defaultInstance.initFields();
		}

		// @@protoc_insertion_point(class_scope:rina.dtp.impl.googleprotobuf.DTPMessage)
	}

	private static com.google.protobuf.Descriptors.Descriptor
	internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_descriptor;
	private static
	com.google.protobuf.GeneratedMessage.FieldAccessorTable
	internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_fieldAccessorTable;

	public static com.google.protobuf.Descriptors.FileDescriptor
	getDescriptor() {
		return descriptor;
	}
	private static com.google.protobuf.Descriptors.FileDescriptor
	descriptor;
	static {
		java.lang.String[] descriptorData = {
				"\n\tDTP.proto\022\034rina.dtp.impl.googleprotobu" +
				"f\"\311\001\n\nDTPMessage\022\021\n\tabsSyntax\030\001 \001(\005\022\017\n\007v" +
				"ersion\030\002 \001(\003\0226\n\006opCode\030\003 \001(\0162&.rina.dtp." +
				"impl.googleprotobuf.opCode_t\022\023\n\013destIPCN" +
				"ame\030\004 \001(\t\022\022\n\ndestPortID\030\005 \001(\005\022\022\n\nsrcIPCN" +
				"ame\030\006 \001(\t\022\021\n\tsrcPortID\030\007 \001(\005\022\017\n\007payload\030" +
				"\010 \001(\014*!\n\010opCode_t\022\n\n\006M_CDAP\020\000\022\t\n\005M_DTP\020\001"
		};
		com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
			new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
			public com.google.protobuf.ExtensionRegistry assignDescriptors(
					com.google.protobuf.Descriptors.FileDescriptor root) {
				descriptor = root;
				internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_descriptor =
					getDescriptor().getMessageTypes().get(0);
				internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessage.FieldAccessorTable(
						internal_static_rina_dtp_impl_googleprotobuf_DTPMessage_descriptor,
						new java.lang.String[] { "AbsSyntax", "Version", "OpCode", "DestIPCName", "DestPortID", "SrcIPCName", "SrcPortID", "Payload", },
						rina.dtp.impl.googleprotobuf.DTP.DTPMessage.class,
						rina.dtp.impl.googleprotobuf.DTP.DTPMessage.Builder.class);
				return null;
			}
		};
		com.google.protobuf.Descriptors.FileDescriptor
		.internalBuildGeneratedFileFrom(descriptorData,
				new com.google.protobuf.Descriptors.FileDescriptor[] {
		}, assigner);
	}

	// @@protoc_insertion_point(outer_class_scope)
}
