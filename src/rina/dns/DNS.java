/**
 * @copyright 2012 Computer Science Department, Recursive InterNetworking Architecture (RINA) laboratory, Boston University. 
 * All rights reserved. Permission to use, copy, modify, and distribute this software and its documentation
 * for any purpose and without fee is hereby granted, provided that the above copyright notice appear in all 
 * copies and that both the copyright notice and this permission notice appear in supporting documentation. 
 * The RINA laboratory of the Computer Science Department at Boston University makes no 
 * representations about the suitability of this software for any purpose. 
 * It is provided "as is" without express or implied warranty. 
 */

/**
 * @author Yuefeng Wang and Flavio Esposito. Computer Science Department, Boston University
 * @version 1.0 
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DNS.proto



package rina.dns;

public final class DNS {
  private DNS() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum opCode_t
      implements com.google.protobuf.ProtocolMessageEnum {
    REG(0, 1),
    QUERY(1, 2),
    REP(2, 3),
    ;
    
    public static final int REG_VALUE = 1;
    public static final int QUERY_VALUE = 2;
    public static final int REP_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static opCode_t valueOf(int value) {
      switch (value) {
        case 1: return REG;
        case 2: return QUERY;
        case 3: return REP;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<opCode_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<opCode_t>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<opCode_t>() {
            public opCode_t findValueByNumber(int number) {
              return opCode_t.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return rina.dns.DNS.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final opCode_t[] VALUES = {
      REG, QUERY, REP, 
    };
    
    public static opCode_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private opCode_t(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:rina.dns.opCode_t)
  }
  
  public interface DNSRecordOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .rina.dns.opCode_t opCode = 1;
    boolean hasOpCode();
    rina.dns.DNS.opCode_t getOpCode();
    
    // optional string name = 2;
    boolean hasName();
    String getName();
    
    // optional string ip = 3;
    boolean hasIp();
    String getIp();
    
    // optional int32 port = 4;
    boolean hasPort();
    int getPort();
    
    // optional int32 controlPort = 5;
    boolean hasControlPort();
    int getControlPort();
    
    // optional int32 dataPort = 6;
    boolean hasDataPort();
    int getDataPort();
  }
  public static final class DNSRecord extends
      com.google.protobuf.GeneratedMessage
      implements DNSRecordOrBuilder {
    // Use DNSRecord.newBuilder() to construct.
    private DNSRecord(Builder builder) {
      super(builder);
    }
    private DNSRecord(boolean noInit) {}
    
    private static final DNSRecord defaultInstance;
    public static DNSRecord getDefaultInstance() {
      return defaultInstance;
    }
    
    public DNSRecord getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rina.dns.DNS.internal_static_rina_dns_DNSRecord_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rina.dns.DNS.internal_static_rina_dns_DNSRecord_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .rina.dns.opCode_t opCode = 1;
    public static final int OPCODE_FIELD_NUMBER = 1;
    private rina.dns.DNS.opCode_t opCode_;
    public boolean hasOpCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public rina.dns.DNS.opCode_t getOpCode() {
      return opCode_;
    }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string ip = 3;
    public static final int IP_FIELD_NUMBER = 3;
    private java.lang.Object ip_;
    public boolean hasIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ip_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 port = 4;
    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getPort() {
      return port_;
    }
    
    // optional int32 controlPort = 5;
    public static final int CONTROLPORT_FIELD_NUMBER = 5;
    private int controlPort_;
    public boolean hasControlPort() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getControlPort() {
      return controlPort_;
    }
    
    // optional int32 dataPort = 6;
    public static final int DATAPORT_FIELD_NUMBER = 6;
    private int dataPort_;
    public boolean hasDataPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getDataPort() {
      return dataPort_;
    }
    
    private void initFields() {
      opCode_ = rina.dns.DNS.opCode_t.REG;
      name_ = "";
      ip_ = "";
      port_ = 0;
      controlPort_ = 0;
      dataPort_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOpCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, opCode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, controlPort_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, dataPort_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, opCode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, controlPort_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, dataPort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static rina.dns.DNS.DNSRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.dns.DNS.DNSRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.dns.DNS.DNSRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.dns.DNS.DNSRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.dns.DNS.DNSRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.dns.DNS.DNSRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rina.dns.DNS.DNSRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.dns.DNS.DNSRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.dns.DNS.DNSRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.dns.DNS.DNSRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rina.dns.DNS.DNSRecord prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements rina.dns.DNS.DNSRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rina.dns.DNS.internal_static_rina_dns_DNSRecord_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rina.dns.DNS.internal_static_rina_dns_DNSRecord_fieldAccessorTable;
      }
      
      // Construct using rina.dns.DNS.DNSRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        opCode_ = rina.dns.DNS.opCode_t.REG;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        controlPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        dataPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rina.dns.DNS.DNSRecord.getDescriptor();
      }
      
      public rina.dns.DNS.DNSRecord getDefaultInstanceForType() {
        return rina.dns.DNS.DNSRecord.getDefaultInstance();
      }
      
      public rina.dns.DNS.DNSRecord build() {
        rina.dns.DNS.DNSRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private rina.dns.DNS.DNSRecord buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        rina.dns.DNS.DNSRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public rina.dns.DNS.DNSRecord buildPartial() {
        rina.dns.DNS.DNSRecord result = new rina.dns.DNS.DNSRecord(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opCode_ = opCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.controlPort_ = controlPort_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dataPort_ = dataPort_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rina.dns.DNS.DNSRecord) {
          return mergeFrom((rina.dns.DNS.DNSRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rina.dns.DNS.DNSRecord other) {
        if (other == rina.dns.DNS.DNSRecord.getDefaultInstance()) return this;
        if (other.hasOpCode()) {
          setOpCode(other.getOpCode());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasControlPort()) {
          setControlPort(other.getControlPort());
        }
        if (other.hasDataPort()) {
          setDataPort(other.getDataPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOpCode()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              rina.dns.DNS.opCode_t value = rina.dns.DNS.opCode_t.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                opCode_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ip_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              port_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              controlPort_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dataPort_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .rina.dns.opCode_t opCode = 1;
      private rina.dns.DNS.opCode_t opCode_ = rina.dns.DNS.opCode_t.REG;
      public boolean hasOpCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public rina.dns.DNS.opCode_t getOpCode() {
        return opCode_;
      }
      public Builder setOpCode(rina.dns.DNS.opCode_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        opCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearOpCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opCode_ = rina.dns.DNS.opCode_t.REG;
        onChanged();
        return this;
      }
      
      // optional string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // optional string ip = 3;
      private java.lang.Object ip_ = "";
      public boolean hasIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
        return this;
      }
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      void setIp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
      }
      
      // optional int32 port = 4;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000008;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 controlPort = 5;
      private int controlPort_ ;
      public boolean hasControlPort() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getControlPort() {
        return controlPort_;
      }
      public Builder setControlPort(int value) {
        bitField0_ |= 0x00000010;
        controlPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearControlPort() {
        bitField0_ = (bitField0_ & ~0x00000010);
        controlPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dataPort = 6;
      private int dataPort_ ;
      public boolean hasDataPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getDataPort() {
        return dataPort_;
      }
      public Builder setDataPort(int value) {
        bitField0_ |= 0x00000020;
        dataPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearDataPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dataPort_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rina.dns.DNSRecord)
    }
    
    static {
      defaultInstance = new DNSRecord(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rina.dns.DNSRecord)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rina_dns_DNSRecord_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rina_dns_DNSRecord_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tDNS.proto\022\010rina.dns\"~\n\tDNSRecord\022\"\n\006op" +
      "Code\030\001 \002(\0162\022.rina.dns.opCode_t\022\014\n\004name\030\002" +
      " \001(\t\022\n\n\002ip\030\003 \001(\t\022\014\n\004port\030\004 \001(\005\022\023\n\013contro" +
      "lPort\030\005 \001(\005\022\020\n\010dataPort\030\006 \001(\005*\'\n\010opCode_" +
      "t\022\007\n\003REG\020\001\022\t\n\005QUERY\020\002\022\007\n\003REP\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rina_dns_DNSRecord_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rina_dns_DNSRecord_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rina_dns_DNSRecord_descriptor,
              new java.lang.String[] { "OpCode", "Name", "Ip", "Port", "ControlPort", "DataPort", },
              rina.dns.DNS.DNSRecord.class,
              rina.dns.DNS.DNSRecord.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
